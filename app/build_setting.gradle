android {

    buildFeatures {
        viewBinding true
        dataBinding = true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        incremental = true
    }


    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }


    kapt {
        useBuildCache = true
    }


    lint {
        abortOnError false
        checkDependencies false
        checkGeneratedSources false
        checkReleaseBuilds false
    }


    bundle {
        language { enableSplit = true }
        density { enableSplit = true }
        abi { enableSplit = true }
    }

    signingConfigs {
        nonprod {
            storeFile = file(props['config'])
            storePassword = props['config.storePassword']
            keyAlias = props['config.keyAlias']
            keyPassword = props['config.keyPassword']
        }
    }

    flavorDimensions "server"

    productFlavors {
        nonprod {
            dimension "server"
            applicationId "hk.gov.td.hketoll"
            signingConfig signingConfigs.nonprod
            buildConfigField "boolean", "IS_BES", "false"
        }
    }


    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true


            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true

            ext.alwaysUpdateBuildId = false
            crunchPngs false
            minifyEnabled false
            shrinkResources false
            signingConfig null

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }

            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false
        }


    }


    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES.txt', 'META-INF/DEPENDENCIES', 'META-INF/dependencies.txt', 'META-INF/LGPL2.1', 'META-INF/NOTICE.txt', 'META-INF/NOTICE', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'typedefs.txt', 'META-INF/NOTICE.txt', 'META-INF/NOTICE']
        }
    }

}

android {
    applicationVariants.all { variant ->
        variant.outputs.all { output ->

            def flavorName = variant.productFlavors[0].name.toLowerCase()
            flavorName = flavorName.replaceAll('staging', '_staging')
            flavorName = flavorName.replaceAll('pilot', '_pilot')
            flavorName = flavorName.replaceAll('nonprod', '_nonprod')


            outputFileName = ("ffts_${flavorName}.apk")

        }
    }
}
